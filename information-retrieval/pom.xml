<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>unibuc.fmi</groupId>
  <artifactId>information-retrieval</artifactId>
  <version>1.0-SNAPSHOT</version>

  <packaging>pom</packaging>
  <name>information-retrieval</name>
  <url>http://maven.apache.org</url>

  <properties>
    <!-- Properties are inherited in children modules. -->
    <!-- https://maven.apache.org/guides/introduction/introduction-to-the-pom.html#properties -->
    <maven.compiler.release>17</maven.compiler.release>

    <!-- Common MainClass used in submodules for entrypoint of execution. -->
    <mainEntry>${project.groupId}.App</mainEntry>

    <!-- The output path for the final JARs. -->
    <outputPath>${project.build.directory}/../../.build</outputPath>

    <!-- The resource directory -->
    <resPath>${outputPath}/../resources</resPath>

    <!-- Other properties. -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <modules>
    <module>core</module>
    <module>index</module>
    <module>query</module>
  </modules>

  <dependencies>
    <!-- https://mvnrepository.com/artifact/org.apache.lucene/lucene-core -->
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-core</artifactId>
      <version>9.8.0</version>
    </dependency>
  </dependencies>

  <build>
    <!-- Inherited across submodules. -->
    <plugins>
      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>info.picocli</groupId>
              <artifactId>picocli-codegen</artifactId>
              <version>4.7.5</version>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
          </compilerArgs>
        </configuration>
      </plugin>
    </plugins>

    <!-- Inherit these settings through opt-in across submodules. -->
    <pluginManagement>
      <plugins>
        <!-- Useful to run exec:java; Children submodules may use <skip>false</skip>. -->
        <!-- https://mvnrepository.com/artifact/org.codehaus.mojo/exec-maven-plugin -->
        <!-- https://stackoverflow.com/questions/3459928 -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>3.1.0</version>
          <configuration>
            <skip>true</skip>
            <mainClass>${mainEntry}</mainClass>
          </configuration>
        </plugin>

        <!-- This plugin provides the capability to build and sign JARs. -->
        <!-- But it just compiles the java files under `src/main/java` and `src/main/resources/`. -->
        <!-- It doesn't include the dependencies JAR files. -->
        <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.3.0</version>
          <configuration>
            <archive>
              <manifest>
                <addClasspath>true</addClasspath>
                <mainClass>${mainEntry}</mainClass>
                <classpathPrefix>libs</classpathPrefix>
              </manifest>
            </archive>
          </configuration>
        </plugin>

        <!-- Groups the Project + Dependencies into an Uber-JAR. -->
        <!-- Allows inclusion & exclusion of specific dependencies. -->
        <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-shade-plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.5.1</version>
          <executions>
            <execution>
              <id>build-jar</id>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
              <configuration>
                <promoteTransitiveDependencies>false</promoteTransitiveDependencies>
                <shadedArtifactAttached>true</shadedArtifactAttached>
                <shadedClassifierName>shade</shadedClassifierName>
                <outputDirectory>${outputPath}</outputDirectory>
                <entryPoints>
                  <entryPoint>${mainEntry}</entryPoint>
                </entryPoints>
                <filters>
                  <filter>
                    <artifact>*:*</artifact>
                    <excludes>
                      <exclude>META-INF/*.SF</exclude>
                      <exclude>META-INF/*.DSA</exclude>
                      <exclude>META-INF/*.RSA</exclude>
                    </excludes>
                  </filter>
                </filters>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Copy resource files to output directory -->
        <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-resources-plugin -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.1</version>
          <executions>
            <execution>
              <id>copy-resources</id>
              <phase>package</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${outputPath}/resources</outputDirectory>
                <resources>
                  <resource>
                    <directory>${resPath}</directory>
                    <includes>
                      <include>**/*.txt</include>
                    </includes>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>